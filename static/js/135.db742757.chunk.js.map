{"version":3,"file":"static/js/135.db742757.chunk.js","mappings":"qPAUaA,EAAY,WACvB,OAAgDC,EAAAA,EAAAA,MAAlCC,EAAd,EAAQC,KAAgBC,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,QACpC,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,GAC3BC,GAAWC,EAAAA,EAAAA,MAuBjB,OArBAC,EAAAA,EAAAA,YAAU,WAMR,GALIT,IACFU,QAAQC,KAAKX,EAAQY,UACrBC,EAAAA,EAAAA,MAG0B,IAAxBT,EAAaU,OAAc,CAC7B,IAAMC,EAAqBX,EAAaY,MACtC,qBAAGC,UAAH,IACAA,WAMF,OAJAV,EAAS,SAAD,OAAUQ,EAAmBG,WAAW,IAAK,MAAQ,CAC3DC,SAAS,SAEXhB,EAAkB,CAACY,GAEpB,CAEDZ,EAAkBN,GAAY,GAC/B,GAAE,CAACM,EAAmBI,EAAUH,EAAcP,EAAUG,KAGvD,UAAC,IAAD,YACE,UAAC,KAAD,WACGE,EAAeY,OAAS,IACvB,SAAC,KAAD,WACE,SAAC,KAAD,CAAcM,GAAE,YAAhB,8BADY,QAIdrB,IACCC,GACDE,EAAemB,KAAI,SAAAC,GAAc,OAC/B,SAAC,KAAD,WACE,SAAC,KAAD,CAAcF,GAAE,gBAAWE,EAAeJ,WAAW,IAAK,MAA1D,SACGI,KAFUA,EADgB,OAQV,IAA1BpB,EAAeY,SACd,SAAC,KAAD,8EAMP,C,wKC3DYS,EAAOC,EAAAA,EAAAA,GAAH,sGAOJC,EAAWD,EAAAA,EAAAA,GAAH,4DAKRE,GAAeF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,8SAcZI,EAAOJ,EAAAA,EAAAA,IAAH,iH,4FCZjB,UAXc,WACZ,OACE,UAAC,IAAD,YACE,SAAC,IAAD,KACA,SAAC,EAAAK,SAAD,CAAUC,UAAU,SAAC,IAAD,CAAQC,KAAK,SAAjC,UACE,SAAC,KAAD,QAIP,C,wGCbYC,EAAeR,EAAAA,EAAAA,QAAH,qJAQZS,EAAUT,EAAAA,EAAAA,MAAH,yW","sources":["components/StorePage/ShopsList/ShopsList.jsx","components/StorePage/ShopsList/ShopsList.styled.jsx","pages/Store/Store.jsx","pages/Store/Store.styled.jsx"],"sourcesContent":["import { useGetShopsQuery } from 'redux/productsSlice';\nimport { CategoryLink, Info, List, ListItem } from './ShopsList.styled';\nimport { useSelector } from 'react-redux';\n\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getShoppingCart } from 'redux/selectors';\nimport { SideBar } from 'pages/Store/Store.styled';\nimport { notification } from 'components/SharedLayout/notification';\n\nexport const ShopsList = () => {\n  const { data: allShops, isFetching, isError } = useGetShopsQuery();\n  const [availableShops, setAvailableShops] = useState([]);\n  const shoppingCart = useSelector(getShoppingCart);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isError) {\n      console.warn(isError.message);\n      notification();\n    }\n\n    if (shoppingCart.length !== 0) {\n      const selectedRestaurant = shoppingCart.find(\n        ({ restaurant }) => restaurant\n      ).restaurant;\n\n      navigate(`store/${selectedRestaurant.replaceAll(' ', '-')}`, {\n        replace: true,\n      });\n      setAvailableShops([selectedRestaurant]);\n      return;\n    }\n\n    setAvailableShops(allShops || []);\n  }, [setAvailableShops, navigate, shoppingCart, allShops, isError]);\n\n  return (\n    <SideBar>\n      <List>\n        {availableShops.length > 1 && (\n          <ListItem key=\"All\">\n            <CategoryLink to={`store/all`}>All restaurants</CategoryLink>\n          </ListItem>\n        )}\n        {!isFetching &&\n          !isError &&\n          availableShops.map(restaurantName => (\n            <ListItem key={restaurantName}>\n              <CategoryLink to={`store/${restaurantName.replaceAll(' ', '-')}`}>\n                {restaurantName}\n              </CategoryLink>\n            </ListItem>\n          ))}\n      </List>\n      {availableShops.length === 1 && (\n        <Info>\n          You can buy products only from the one shop at the same time.\n        </Info>\n      )}\n    </SideBar>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px 0;\n  width: 100%;\n`;\n\nexport const CategoryLink = styled(NavLink)`\n  text-transform: uppercase;\n  text-decoration: none;\n  display: flex;\n  gap: 10px;\n  padding-bottom: 5px;\n  align-items: center;\n  border-bottom: 3px solid transparent;\n  &.active {\n    color: var(--brand-color);\n    border-bottom: 3px solid var(--brand-color);\n  }\n`;\n\nexport const Info = styled.div`\n  border-radius: 15px;\n  width: 100%;\n  padding: 15px;\n  background-color: #61dbfb44;\n`;\n","import { ShopsList } from 'components/StorePage/ShopsList/ShopsList';\nimport { StoreWrapper } from './Store.styled';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Loader } from 'components/StorePage/ProductsList/ProductsList.styled';\n\nconst Store = () => {\n  return (\n    <StoreWrapper>\n      <ShopsList />\n      <Suspense fallback={<Loader size=\"25px\" />}>\n        <Outlet />\n      </Suspense>\n    </StoreWrapper>\n  );\n};\n\nexport default Store;\n","import styled from '@emotion/styled';\n\nexport const StoreWrapper = styled.section`\n  display: flex;\n  @media screen and (max-width: 1280px) {\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\nexport const SideBar = styled.aside`\n  flex-shrink: 0;\n  width: 260px;\n  padding: 20px;\n  border-right: 1px solid var(--primary-white-color);\n  border-bottom: 1px solid transparent;\n  @media screen and (max-width: 1280px) {\n    width: 100%;\n    max-width: none;\n    border-right: 1px solid transparent;\n    border-bottom: 1px solid var(--primary-white-color);\n  }\n`;\n"],"names":["ShopsList","useGetShopsQuery","allShops","data","isFetching","isError","useState","availableShops","setAvailableShops","shoppingCart","useSelector","getShoppingCart","navigate","useNavigate","useEffect","console","warn","message","notification","length","selectedRestaurant","find","restaurant","replaceAll","replace","to","map","restaurantName","List","styled","ListItem","CategoryLink","NavLink","Info","Suspense","fallback","size","StoreWrapper","SideBar"],"sourceRoot":""}
{"version":3,"file":"static/js/145.4ce5bfc4.chunk.js","mappings":"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","sources":["components/MyOrders/MyOrdersForm/MyOrdersForm.styled.jsx","components/MyOrders/MyOrdersForm/MyOrdersForm.jsx","components/MyOrders/MyOrdersList/MyOrdersList.styled.jsx","components/MyOrders/MyOrderItem/MyOrderItem.styled.jsx","components/MyOrders/MyOrderItem/MyOrderItem.jsx","components/MyOrders/MyOrdersList/MyOrdersList.jsx","pages/MyOrders/MyOrders.jsx","pages/Store/Store.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const AppForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-self: flex-start;\n  justify-content: center;\n  gap: 10px;\n\n  width: 300px;\n  border: 1px solid black;\n  border-radius: 15px;\n  padding: 15px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 0;\n  margin: 0;\n  width: 250px;\n  font-size: 24px;\n`;\n\nexport const FormInputLabel = styled.label`\n  padding: 0;\n  margin: 0;\n  text-transform: capitalize;\n  width: 250px;\n  font-size: 24px;\n`;\n\nexport const ErrMessage = styled.span`\n  max-width: 250px;\n  color: red;\n`;\n\nexport const SubmitButton = styled.button`\n  background-color: transparent;\n  width: 70px;\n  text-align: center;\n  padding: 10px;\n  border-radius: 15px;\n  border: 1px solid #fed800;\n  &:hover,\n  &:focus,\n  &:disabled {\n    cursor: pointer;\n    background-color: gray;\n    color: #fff;\n  }\n`;\n","import {\n  AppForm,\n  FormInput,\n  FormInputLabel,\n  SubmitButton,\n  ErrMessage,\n} from './MyOrdersForm.styled';\nimport { nanoid } from 'nanoid';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nexport const MyOrdersForm = ({ onFormSubmit }) => {\n  const numberID = nanoid();\n  const emailID = nanoid();\n\n  const validationSchema = yup.object().shape({\n    number: yup\n      .string()\n      .matches(\n        '^[+]?[(]?[0-9]{1,4}[)]?[-s.]?[0-9]{1,4}[-s.]?[0-9]{1,6}$',\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required(),\n    email: yup\n      .string()\n      .matches('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$', 'Wrong email format')\n      .required(),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  return (\n    <AppForm\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(data => {\n        reset({ number: '', email: '' });\n        onFormSubmit(data);\n      })}\n    >\n      <FormInputLabel htmlFor={numberID}>Number</FormInputLabel>\n      <FormInput type=\"text\" {...register('number')} id={numberID} />\n      {errors.number && <ErrMessage>{errors.number.message}</ErrMessage>}\n      <FormInputLabel htmlFor={emailID}>email</FormInputLabel>\n      <FormInput type=\"text\" {...register('email')} id={emailID} />\n      {errors.email && <ErrMessage>{errors.email.message}</ErrMessage>}\n      <SubmitButton type=\"submit\">'Submit'</SubmitButton>\n    </AppForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  padding: 20px;\n  gap: 15px;\n  flex-wrap: wrap;\n  height: 80vh;\n  max-width: 70%;\n  overflow-y: scroll;\n`;\n","import styled from '@emotion/styled';\n\nexport const ProductCard = styled.li`\n  border-radius: 15px;\n  padding: 15px;\n  border: 1px solid black;\n  overflow: hidden;\n  margin-bottom: 10px;\n  display: flex;\n  gap: 15px;\n`;\n\nexport const OrderItem = styled.li`\n  width: 20%;\n`;\n\nexport const CardTitle = styled.h3`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const CardDescription = styled.p`\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const PurchaseWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-self: flex-end;\n  align-items: center;\n`;\n\nexport const CardPrice = styled.p`\n  font-size: 20px;\n  color: green;\n`;\n\nexport const AddToCartButton = styled.button`\n  border-radius: 15px;\n  padding: 15px;\n  font-size: 20px;\n  text-align: center;\n`;\n\nexport const ChangeQuantityButton = styled.button`\n  border-radius: 50%;\n  font-size: 20px;\n  text-align: center;\n`;\n\nexport const QuantityCounter = styled.p`\n  font-size: 18px;\n  color: red;\n`;\n","import {\n  CardPrice,\n  CardTitle,\n  OrderItem,\n  ProductCard,\n  PurchaseWrapper,\n} from './MyOrderItem.styled';\n\nexport const MyOrderItem = ({ order }) => {\n  const { orderItems, totalPrice } = order;\n\n  return (\n    <ProductCard>\n      <ul>\n        {orderItems.map(orderItem => (\n          <OrderItem key={orderItem.id}>\n            <img src={orderItem.image} alt={orderItem.title} width=\"100px\" />\n            <CardTitle>{orderItem.title}</CardTitle>\n            <PurchaseWrapper>\n              <CardPrice>Price: {orderItem.price} â‚´</CardPrice>\n              <CardPrice>Quantity: {orderItem.quantity} pcs.</CardPrice>\n            </PurchaseWrapper>\n          </OrderItem>\n        ))}\n      </ul>\n      <p>{totalPrice}</p>\n    </ProductCard>\n  );\n};\n","import { List } from './MyOrdersList.styled';\nimport { MyOrderItem } from 'components/MyOrders/MyOrderItem/MyOrderItem';\n\nexport const MyOrdersList = ({ ordersList }) => {\n  return (\n    <List>\n      {ordersList.map(order => (\n        <MyOrderItem key={order.id} order={order} />\n      ))}\n    </List>\n  );\n};\n","import { MyOrdersForm } from 'components/MyOrders/MyOrdersForm/MyOrdersForm';\nimport { MyOrdersList } from 'components/MyOrders/MyOrdersList/MyOrdersList';\nimport { StoreWrapper } from 'pages/Store/Store.styled';\nimport { useState } from 'react';\nimport { useGetAllOrdersQuery } from 'redux/ordersSlice';\n\nconst MyOrders = () => {\n  const { data } = useGetAllOrdersQuery();\n  const [customerOrders, setCustomerOrders] = useState([]);\n\n  const getOrdersByCustomerData = ({ number, email }) => {\n    const customerOrders = data.filter(\n      ({ customerData }) =>\n        customerData.number === number && customerData.email === email\n    );\n    setCustomerOrders(customerOrders);\n  };\n\n  return (\n    <StoreWrapper>\n      <MyOrdersForm onFormSubmit={getOrdersByCustomerData} />\n      {customerOrders.length !== 0 && (\n        <MyOrdersList ordersList={customerOrders} />\n      )}\n    </StoreWrapper>\n  );\n};\n\nexport default MyOrders;\n","import styled from '@emotion/styled';\n\nexport const StoreWrapper = styled.div`\n  display: flex;\n`;\n"],"names":["AppForm","styled","FormInput","FormInputLabel","ErrMessage","SubmitButton","MyOrdersForm","onFormSubmit","numberID","nanoid","emailID","validationSchema","yup","shape","number","matches","required","email","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","autoComplete","onSubmit","data","htmlFor","type","id","message","List","ProductCard","OrderItem","CardTitle","PurchaseWrapper","CardPrice","MyOrderItem","order","orderItems","totalPrice","map","orderItem","src","image","alt","title","width","price","quantity","MyOrdersList","ordersList","useGetAllOrdersQuery","useState","customerOrders","setCustomerOrders","filter","customerData","length","StoreWrapper"],"sourceRoot":""}
{"version":3,"file":"static/js/145.862d921b.chunk.js","mappings":"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","sources":["components/MyOrders/MyOrdersForm/MyOrdersForm.styled.jsx","components/MyOrders/MyOrdersForm/MyOrdersForm.jsx","components/MyOrders/MyOrdersList/MyOrdersList.styled.jsx","components/MyOrders/MyOrderItem/MyOrderItem.styled.jsx","components/MyOrders/MyOrderItem/MyOrderItem.jsx","components/MyOrders/MyOrdersList/MyOrdersList.jsx","pages/MyOrders/MyOrders.jsx","pages/Store/Store.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const AppForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-self: flex-start;\n  justify-content: center;\n  gap: 10px;\n\n  width: 100%;\n`;\n\nexport const FormInput = styled.input`\n  padding: 10px;\n  margin: 0;\n  border-radius: 10px;\n  width: 100%;\n  color: var(--primary-white-color);\n  font-size: 24px;\n  background-color: transparent;\n  border: 1px solid var(--brand-color);\n`;\n\nexport const FormInputLabel = styled.label`\n  padding: 0;\n  margin: 0;\n  text-transform: capitalize;\n  width: 100%;\n  font-size: 24px;\n`;\n\nexport const ErrMessage = styled.span`\n  max-width: 100%;\n  color: red;\n  padding: 10px;\n  border-radius: 10px;\n  background-color: #61dbfb22;\n`;\n\nexport const SubmitButton = styled.button`\n  border-radius: 15px;\n  padding: 10px;\n  font-size: 20px;\n  text-align: center;\n  color: var(--brand-color);\n  border: 2px solid var(--brand-color);\n  background-color: transparent;\n  transition: color 200ms linear, background-color 200ms linear;\n\n  &:hover,\n  &:focus {\n    color: var(--primary-white-color);\n    border: 2px solid var(--primary-white-color);\n  }\n  &:disabled {\n    cursor: not-allowed;\n    border: 2px solid #000000cc;\n    color: #000000cc;\n    background-color: #00000011;\n  }\n`;\n","import {\n  AppForm,\n  FormInput,\n  FormInputLabel,\n  SubmitButton,\n  ErrMessage,\n} from './MyOrdersForm.styled';\nimport { nanoid } from 'nanoid';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { SideBar } from 'pages/Store/Store.styled';\n\nexport const MyOrdersForm = ({ onFormSubmit }) => {\n  const numberID = nanoid();\n  const emailID = nanoid();\n\n  const validationSchema = yup.object().shape({\n    number: yup\n      .string()\n      .matches(\n        '^[+]?[(]?[0-9]{1,4}[)]?[-s.]?[0-9]{1,4}[-s.]?[0-9]{1,6}$',\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required(),\n    email: yup\n      .string()\n      .matches('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$', 'Wrong email format')\n      .required(),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  return (\n    <SideBar>\n      <AppForm\n        autoComplete=\"off\"\n        onSubmit={handleSubmit(data => {\n          reset({ number: '', email: '' });\n          onFormSubmit(data);\n        })}\n      >\n        <FormInputLabel htmlFor={numberID}>Number</FormInputLabel>\n        <FormInput type=\"text\" {...register('number')} id={numberID} />\n        {errors.number && <ErrMessage>{errors.number.message}</ErrMessage>}\n        <FormInputLabel htmlFor={emailID}>email</FormInputLabel>\n        <FormInput type=\"text\" {...register('email')} id={emailID} />\n        {errors.email && <ErrMessage>{errors.email.message}</ErrMessage>}\n        <SubmitButton type=\"submit\">Submit</SubmitButton>\n      </AppForm>\n    </SideBar>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  padding: 20px;\n  gap: 15px;\n  flex-wrap: wrap;\n  height: 80vh;\n  max-width: 70%;\n  overflow-y: scroll;\n`;\n","import styled from '@emotion/styled';\n\nexport const ProductCard = styled.li`\n  width: 100%;\n  border: 1px solid var(--brand-color);\n  border-radius: 15px;\n  overflow: hidden;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10;\n`;\n\nexport const ItemsList = styled.ul`\n  display: flex;\n  padding: 20px;\n  gap: 20px;\n`;\n\nexport const OrderItem = styled.li`\n  position: relative;\n  overflow: hidden;\n  width: 20%;\n\n  &:hover div {\n    cursor: pointer;\n    transform: translateY(0%);\n  }\n`;\n\nexport const ItemImage = styled.img`\n  border-radius: 15px;\n  width: 100px;\n  height: 100px;\n`;\n\nexport const CardTitle = styled.h3`\n  font-size: 12px;\n  width: 100px;\n`;\n\nexport const PurchaseWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  width: 100px;\n  padding: 15px;\n  border-radius: 15px;\n  font-size: 16px;\n  background-color: #000000cc;\n  transform: translateY(-100%);\n  transition: transform 250ms linear;\n`;\n\nexport const CardPrice = styled.p`\n  color: #00d000;\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 20px;\n  font-size: 24px;\n`;\n\nexport const OrderTotalPrice = styled.p`\n  font-size: 32px;\n  color: #00d000;\n  text-align: right;\n`;\n","import {\n  CardPrice,\n  CardTitle,\n  ItemImage,\n  ItemsList,\n  OrderItem,\n  ProductCard,\n  PurchaseWrapper,\n  OrderTotalPrice,\n  DateWrapper,\n} from './MyOrderItem.styled';\n\nexport const MyOrderItem = ({ order }) => {\n  const { orderItems, totalPrice, createdAt } = order;\n  const date = new Date(createdAt);\n\n  return (\n    <ProductCard>\n      <ItemsList>\n        {orderItems.map(orderItem => (\n          <OrderItem key={orderItem.id}>\n            <ItemImage src={orderItem.image} alt={orderItem.title} />\n            <CardTitle>{orderItem.title}</CardTitle>\n            <PurchaseWrapper>\n              <CardPrice>Price: {orderItem.price} ₴</CardPrice>\n              <CardPrice>Quantity: {orderItem.quantity} pcs.</CardPrice>\n            </PurchaseWrapper>\n          </OrderItem>\n        ))}\n      </ItemsList>\n      <DateWrapper>\n        <p>{date.toLocaleDateString()}</p>\n        <p>\n          Total order price: <OrderTotalPrice>{totalPrice}₴</OrderTotalPrice>\n        </p>\n      </DateWrapper>\n    </ProductCard>\n  );\n};\n","import { List } from './MyOrdersList.styled';\nimport { MyOrderItem } from 'components/MyOrders/MyOrderItem/MyOrderItem';\n\nexport const MyOrdersList = ({ ordersList }) => {\n  return (\n    <List>\n      {ordersList.map(order => (\n        <MyOrderItem key={order.id} order={order} />\n      ))}\n    </List>\n  );\n};\n","import { MyOrdersForm } from 'components/MyOrders/MyOrdersForm/MyOrdersForm';\nimport { MyOrdersList } from 'components/MyOrders/MyOrdersList/MyOrdersList';\nimport { StoreWrapper } from 'pages/Store/Store.styled';\nimport { useState } from 'react';\nimport { useGetAllOrdersQuery } from 'redux/ordersSlice';\n\nconst MyOrders = () => {\n  const { data } = useGetAllOrdersQuery();\n  const [customerOrders, setCustomerOrders] = useState([]);\n\n  const getOrdersByCustomerData = ({ number, email }) => {\n    const customerOrders = data.filter(\n      ({ customerData }) =>\n        customerData.number === number && customerData.email === email\n    );\n    setCustomerOrders(customerOrders);\n  };\n\n  return (\n    <StoreWrapper>\n      <MyOrdersForm onFormSubmit={getOrdersByCustomerData} />\n      {customerOrders.length !== 0 && (\n        <MyOrdersList ordersList={customerOrders} />\n      )}\n    </StoreWrapper>\n  );\n};\n\nexport default MyOrders;\n","import styled from '@emotion/styled';\n\nexport const StoreWrapper = styled.div`\n  display: flex;\n  @media screen and (max-width: 1280px) {\n    flex-direction: column;\n  }\n`;\n\nexport const SideBar = styled.div`\n  flex-shrink: 0;\n  width: 260px;\n  padding: 20px;\n  border-right: 1px solid var(--primary-white-color);\n  border-bottom: 1px solid transparent;\n  @media screen and (max-width: 1280px) {\n    width: 100%;\n    max-width: none;\n    border-right: 1px solid transparent;\n    border-bottom: 1px solid var(--primary-white-color);\n  }\n`;\n"],"names":["AppForm","styled","FormInput","FormInputLabel","ErrMessage","SubmitButton","MyOrdersForm","onFormSubmit","numberID","nanoid","emailID","validationSchema","yup","shape","number","matches","required","email","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","autoComplete","onSubmit","data","htmlFor","type","id","message","List","ProductCard","ItemsList","OrderItem","ItemImage","CardTitle","PurchaseWrapper","CardPrice","DateWrapper","OrderTotalPrice","MyOrderItem","order","orderItems","totalPrice","createdAt","date","Date","map","orderItem","src","image","alt","title","price","quantity","toLocaleDateString","MyOrdersList","ordersList","useGetAllOrdersQuery","useState","customerOrders","setCustomerOrders","filter","customerData","length","StoreWrapper","SideBar"],"sourceRoot":""}
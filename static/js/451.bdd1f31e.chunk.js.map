{"version":3,"file":"static/js/451.bdd1f31e.chunk.js","mappings":"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","sources":["components/ShoppingCart/ShoppingCartList/EmptyList.jsx","components/ShoppingCart/ShoppingCartList/ShoppingCartList.styled.jsx","components/StorePage/ShopsList/ShopsList.styled.jsx","components/ShoppingCart/OrderForm/OrderForm.styled.jsx","components/ShoppingCart/OrderForm/OrderForm.jsx","components/ShoppingCart/ShoppingCartItem/ShoppingCartItem.styled.jsx","components/ShoppingCart/QuantityCounter/QuantityCounter.styled.jsx","components/ShoppingCart/QuantityCounter/QuantityCounter.jsx","components/ShoppingCart/ShoppingCartItem/ShoppingCartItem.jsx","components/ShoppingCart/ShoppingCartList/ShoppingCartList.jsx","pages/ShoppingCart/ShoppingCart.styled.jsx","pages/ShoppingCart/ShoppingCart.jsx","pages/Store/Store.styled.jsx"],"sourcesContent":["import { BsCartPlus } from 'react-icons/bs';\nimport {\n  EmptyInfo,\n  EmptyListWrapper,\n  LinkToHome,\n} from './ShoppingCartList.styled';\n\nexport const EmptyList = ({ info }) => {\n  return (\n    <EmptyListWrapper>\n      <LinkToHome to=\"/\">\n        <BsCartPlus size=\"150px\" />\n      </LinkToHome>\n      <EmptyInfo>{info}</EmptyInfo>\n    </EmptyListWrapper>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  margin: 0 auto;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 20px;\n  gap: 15px;\n  flex-wrap: wrap;\n  height: 80vh;\n  width: 77%;\n  overflow-y: scroll;\n`;\n\nexport const EmptyListWrapper = styled.section`\n  padding: 40px;\n  margin: auto;\n  text-align: center;\n`;\n\nexport const LinkToHome = styled(Link)`\n  border: none;\n  background-color: transparent;\n  display: block;\n  margin-bottom: 20px;\n  &:hover,\n  &:focus {\n    color: var(--brand-color);\n  }\n`;\nexport const EmptyInfo = styled.p`\n  font-size: 24px;\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px 0;\n  width: 100%;\n`;\n\nexport const CategoryLink = styled(NavLink)`\n  text-transform: uppercase;\n  text-decoration: none;\n  display: flex;\n  gap: 10px;\n  padding-bottom: 5px;\n  align-items: center;\n  border-bottom: 3px solid transparent;\n  &.active {\n    color: var(--brand-color);\n    border-bottom: 3px solid var(--brand-color);\n  }\n`;\n\nexport const Info = styled.div`\n  border-radius: 15px;\n  width: 100%;\n  padding: 15px;\n  background-color: #61dbfb44;\n`;\n","import styled from '@emotion/styled';\n\nexport const AppForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-self: flex-start;\n  justify-content: center;\n  gap: 10px;\n\n  width: 100%;\n`;\n\nexport const FormInput = styled.input`\n  padding: 10px;\n  margin: 0;\n  border-radius: 10px;\n  width: 100%;\n  color: var(--primary-white-color);\n  font-size: 24px;\n  background-color: transparent;\n  border: 1px solid var(--brand-color);\n`;\n\nexport const FormInputLabel = styled.label`\n  padding: 0;\n  margin: 0;\n  text-transform: capitalize;\n  width: 100%;\n  font-size: 24px;\n`;\n\nexport const ErrMessage = styled.span`\n  max-width: 100%;\n  color: red;\n  padding: 10px;\n  border-radius: 10px;\n  background-color: #61dbfb22;\n`;\n\nexport const SubmitButton = styled.button`\n  border-radius: 15px;\n  padding: 10px;\n  font-size: 20px;\n  text-align: center;\n  color: var(--brand-color);\n  border: 2px solid var(--brand-color);\n  background-color: transparent;\n  transition: color 200ms linear, background-color 200ms linear;\n\n  &:hover,\n  &:focus {\n    color: var(--primary-white-color);\n    border: 2px solid var(--primary-white-color);\n  }\n  &:disabled {\n    cursor: not-allowed;\n    border: 2px solid #000000cc;\n    color: #000000cc;\n    background-color: #00000011;\n  }\n`;\n","import {\n  AppForm,\n  FormInput,\n  FormInputLabel,\n  SubmitButton,\n  ErrMessage,\n} from './OrderForm.styled';\nimport { nanoid } from 'nanoid';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { SideBar } from 'pages/Store/Store.styled';\n\nexport const OrderForm = ({ isShoppingCartEmpty, onFormSubmit }) => {\n  const nameID = nanoid();\n  const numberID = nanoid();\n  const emailID = nanoid();\n  const addressID = nanoid();\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .matches(\n        \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n      .required(),\n    number: yup\n      .string()\n      .matches(\n        '^[+]?[(]?[0-9]{1,4}[)]?[-s.]?[0-9]{1,4}[-s.]?[0-9]{1,6}$',\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required(),\n    email: yup\n      .string()\n      .matches(\n        '[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$',\n        'Email may contain \"@\" and \".\" symbols'\n      )\n      .required(),\n    address: yup\n      .string()\n      .min(5, 'must be at least 5 characters long')\n      .required('Address is required field, example: street 7, city'),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  return (\n    <SideBar>\n      <AppForm\n        autoComplete=\"off\"\n        onSubmit={handleSubmit(data => {\n          onFormSubmit(data);\n          reset({ name: '', number: '', address: '', email: '' });\n        })}\n      >\n        <FormInputLabel htmlFor={nameID}>Name</FormInputLabel>\n        <FormInput\n          type=\"text\"\n          {...register('name')}\n          id={nameID}\n          placeholder=\"Name Surname\"\n        />\n        {errors.name && <ErrMessage>{errors.name.message}</ErrMessage>}\n        <FormInputLabel htmlFor={numberID}>Number</FormInputLabel>\n        <FormInput\n          type=\"text\"\n          {...register('number')}\n          id={numberID}\n          placeholder=\"0800500609\"\n        />\n        {errors.number && <ErrMessage>{errors.number.message}</ErrMessage>}\n        <FormInputLabel htmlFor={emailID}>email</FormInputLabel>\n        <FormInput\n          type=\"text\"\n          {...register('email')}\n          id={emailID}\n          placeholder=\"email@e.mail\"\n        />\n        {errors.email && <ErrMessage>{errors.email.message}</ErrMessage>}\n        <FormInputLabel htmlFor={addressID}>address</FormInputLabel>\n        <FormInput\n          type=\"text\"\n          {...register('address')}\n          id={addressID}\n          placeholder=\"JavaStreet 8, City\"\n        />\n        {errors.address && <ErrMessage>{errors.address.message}</ErrMessage>}\n        <SubmitButton type=\"submit\" disabled={isShoppingCartEmpty}>\n          Submit\n        </SubmitButton>\n      </AppForm>\n    </SideBar>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ProductCard = styled.li`\n  box-shadow: black 0px 0px 10px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  max-width: 100%;\n  border-radius: 15px;\n  border: 2px solid var(--brand-color);\n  overflow: hidden;\n  &:hover p {\n    cursor: pointer;\n    transform: translateY(0%);\n  }\n\n  @media screen and (min-width: 480px) {\n    max-width: none;\n    width: 270px;\n  }\n`;\n\nexport const CardImage = styled.img`\n  width: 100%;\n  height: 250px;\n  margin-bottom: 10px;\n`;\n\nexport const CardTitle = styled.h3`\n  padding: 0 10px;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const CardDescription = styled.p`\n  padding: 10px;\n  margin-bottom: 10px;\n  font-size: 14px;\n  position: absolute;\n  top: 0;\n  transform: translateY(-100%);\n  transition: transform 250ms linear;\n\n  background-color: #000000cc;\n`;\n\nexport const PurchaseWrapper = styled.div`\n  display: flex;\n  padding: 10px;\n  justify-content: space-between;\n  margin-top: auto;\n`;\n\nexport const CardPrice = styled.p`\n  font-size: 24px;\n  color: #00d000;\n`;\n\nexport const AddToCartButton = styled.button`\n  border-radius: 15px;\n  padding: 10px;\n  font-size: 20px;\n  text-align: center;\n  color: var(--brand-color);\n  border: 2px solid var(--brand-color);\n  background-color: transparent;\n  transition: color 200ms linear, background-color 200ms linear;\n\n  &:hover,\n  &:focus {\n    color: var(--primary-white-color);\n    border: 2px solid var(--primary-white-color);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const CounterWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0 auto;\n  gap: 10px;\n  width: 120px;\n  border-radius: 20px;\n  background-color: #61dbfb44;\n`;\n\nexport const ChangeQuantityButton = styled.button`\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  padding-top: 7px;\n  font-size: 24px;\n  font-weight: 700;\n  text-align: center;\n  background-color: transparent;\n  color: var(--primary-white-color);\n  border: 1px solid var(--primary-white-color);\n  transition: background-color 250ms linear, border-color 250ms linear,\n    color 250ms linear;\n\n  &:hover,\n  &:focus {\n    color: var(--brand-color);\n  }\n  &:disabled {\n    background-color: #00000066;\n    color: #00000066;\n    border: 1px solid #00000066;\n  }\n`;\n\nexport const Counter = styled.p`\n  font-size: 22px;\n  color: var(--primart-white-color);\n`;\n","import { useDispatch } from 'react-redux';\nimport {\n  Counter,\n  ChangeQuantityButton,\n  CounterWrapper,\n} from './QuantityCounter.styled';\nimport { BsCartPlus, BsCartDash } from 'react-icons/bs';\n\nimport { changeQuantity } from 'redux/shoppingCartSlice';\nimport { useEffect, useState } from 'react';\n\nexport const QuantityCounter = ({ id, quantity }) => {\n  const [counterValue, setCounterValue] = useState(quantity);\n  const dispatch = useDispatch();\n  const isProductOneInCart = counterValue === 1;\n\n  useEffect(() => {\n    dispatch(changeQuantity(id, counterValue));\n  }, [counterValue, dispatch, id]);\n\n  return (\n    <CounterWrapper>\n      <ChangeQuantityButton\n        onClick={() => {\n          setCounterValue(counterValue + 1);\n        }}\n      >\n        <BsCartPlus />\n      </ChangeQuantityButton>\n      <Counter>{counterValue}</Counter>\n      <ChangeQuantityButton\n        onClick={() => {\n          setCounterValue(counterValue - 1);\n        }}\n        disabled={isProductOneInCart}\n      >\n        <BsCartDash />\n      </ChangeQuantityButton>\n    </CounterWrapper>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport {\n  AddToCartButton,\n  CardDescription,\n  CardImage,\n  CardPrice,\n  CardTitle,\n  ProductCard,\n  PurchaseWrapper,\n} from './ShoppingCartItem.styled';\nimport { BsCartX } from 'react-icons/bs';\nimport { deleteProduct } from 'redux/shoppingCartSlice';\nimport { QuantityCounter } from '../QuantityCounter/QuantityCounter';\n\nexport const ShoppingCartItem = ({ burger }) => {\n  const dispatch = useDispatch();\n\n  const { images, name, id, quantity, desc, price } = burger;\n\n  const productTotalPrice = Math.round(quantity * price);\n\n  return (\n    <ProductCard>\n      <CardImage src={images[0].sm} alt={name} width=\"100%\" />\n      <CardTitle>{name}</CardTitle>\n      <CardDescription>{desc}</CardDescription>\n      <QuantityCounter quantity={quantity} id={id} />\n      <PurchaseWrapper>\n        <span>\n          Price: <CardPrice>{Math.round(productTotalPrice)} ₴</CardPrice>\n        </span>\n        <AddToCartButton\n          onClick={() => {\n            dispatch(deleteProduct(id));\n          }}\n        >\n          Remove <BsCartX />\n        </AddToCartButton>\n      </PurchaseWrapper>\n    </ProductCard>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { List } from './ShoppingCartList.styled';\nimport { ShoppingCartItem } from 'components/ShoppingCart/ShoppingCartItem/ShoppingCartItem';\nimport { getShoppingCart } from 'redux/selectors';\n\nexport const ShoppingCartList = () => {\n  const products = useSelector(getShoppingCart);\n\n  return (\n    <List>\n      {products.map(burger => (\n        <ShoppingCartItem key={burger.id} burger={burger} />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ShoppingCartWrapper = styled.main`\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (max-width: 1280px) {\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\nexport const TotalPriceWrapper = styled.section`\n  flex-shrink: 0;\n  width: 100%;\n  text-align: left;\n  padding: 20px;\n`;\n\nexport const TotalPrice = styled.p`\n  font-size: 32px;\n  color: var(--primary-white-color);\n  span {\n    color: #00d000;\n  }\n`;\n","import { OrderForm } from 'components/ShoppingCart/OrderForm/OrderForm';\nimport { ShoppingCartList } from 'components/ShoppingCart/ShoppingCartList/ShoppingCartList';\nimport {\n  ShoppingCartWrapper,\n  TotalPrice,\n  TotalPriceWrapper,\n} from './ShoppingCart.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCreateOrderMutation } from 'redux/ordersSlice';\nimport { clearShoppingCart } from 'redux/shoppingCartSlice';\nimport { getShoppingCart } from 'redux/selectors';\nimport { Info } from 'components/StorePage/ShopsList/ShopsList.styled';\nimport { EmptyList } from 'components/ShoppingCart/ShoppingCartList/EmptyList';\nimport { notification } from 'components/SharedLayout/notification';\n\nconst ShoppingCart = () => {\n  const [createOrder] = useCreateOrderMutation();\n  const dispatch = useDispatch();\n  const orderItems = useSelector(getShoppingCart);\n\n  const isShoppingCartEmpty = orderItems.length === 0;\n\n  const totalPrice = orderItems.reduce(\n    (total, product) => total + Number(product.price * product.quantity),\n    0\n  );\n\n  const handleCreateOrder = customerData => {\n    createOrder({ customerData, orderItems, totalPrice })\n      .then(response => {\n        if (response.error) {\n          throw new Error(response.error.data);\n        }\n        notification(\n          `${customerData.name}, your order is succesfully created`,\n          'success'\n        );\n        dispatch(clearShoppingCart());\n      })\n      .catch(error => {\n        console.warn(error);\n        notification();\n      });\n  };\n\n  return (\n    <ShoppingCartWrapper>\n      {!isShoppingCartEmpty && (\n        <Info>\n          We can deliver your order right to your home, please fill the form\n          below\n        </Info>\n      )}\n      <OrderForm\n        isShoppingCartEmpty={isShoppingCartEmpty}\n        onFormSubmit={handleCreateOrder}\n      />\n      {isShoppingCartEmpty ? (\n        <EmptyList info=\"Oops, your cart is empty yet. Let's go shopping...\" />\n      ) : (\n        <ShoppingCartList />\n      )}\n      <TotalPriceWrapper>\n        <TotalPrice>\n          Total price: <span>{Math.round(totalPrice)} ₴</span>\n        </TotalPrice>\n      </TotalPriceWrapper>\n    </ShoppingCartWrapper>\n  );\n};\nexport default ShoppingCart;\n","import styled from '@emotion/styled';\n\nexport const StoreWrapper = styled.main`\n  display: flex;\n  @media screen and (max-width: 1280px) {\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\nexport const SideBar = styled.aside`\n  flex-shrink: 0;\n  width: 260px;\n  padding: 20px;\n  border-right: 1px solid var(--primary-white-color);\n  border-bottom: 1px solid transparent;\n  @media screen and (max-width: 1280px) {\n    width: 100%;\n    max-width: none;\n    border-right: 1px solid transparent;\n    border-bottom: 1px solid var(--primary-white-color);\n  }\n`;\n"],"names":["EmptyList","info","to","size","List","styled","EmptyListWrapper","LinkToHome","Link","EmptyInfo","ListItem","CategoryLink","NavLink","Info","AppForm","FormInput","FormInputLabel","ErrMessage","SubmitButton","OrderForm","isShoppingCartEmpty","onFormSubmit","nameID","nanoid","numberID","emailID","addressID","validationSchema","yup","shape","name","matches","required","number","email","address","min","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","autoComplete","onSubmit","data","htmlFor","type","id","placeholder","message","disabled","ProductCard","CardImage","CardTitle","CardDescription","PurchaseWrapper","CardPrice","AddToCartButton","CounterWrapper","ChangeQuantityButton","Counter","QuantityCounter","quantity","useState","counterValue","setCounterValue","dispatch","useDispatch","isProductOneInCart","useEffect","changeQuantity","onClick","ShoppingCartItem","burger","images","desc","price","productTotalPrice","Math","round","src","sm","alt","width","deleteProduct","ShoppingCartList","products","useSelector","getShoppingCart","map","ShoppingCartWrapper","TotalPriceWrapper","TotalPrice","useCreateOrderMutation","createOrder","orderItems","length","totalPrice","reduce","total","product","Number","customerData","then","response","error","Error","notification","clearShoppingCart","catch","console","warn","StoreWrapper","SideBar"],"sourceRoot":""}
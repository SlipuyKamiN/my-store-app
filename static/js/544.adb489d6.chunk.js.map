{"version":3,"file":"static/js/544.adb489d6.chunk.js","mappings":"2OASaA,EAAY,WACvB,OAAuCC,EAAAA,EAAAA,MAAzBC,EAAd,EAAQC,KAAgBC,EAAxB,EAAwBA,WACxB,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,GAC3BC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAA4B,IAAxBL,EAAaM,OAAc,CAC7B,IAAMC,EAAeP,EAAaQ,MAChC,qBAAGC,QAAH,IACAA,SAIF,OAFAN,EAAS,SAAD,OAAUI,GAAgB,CAAEG,SAAS,SAC7CX,EAAkB,CAACQ,GAEpB,CAEDR,EAAkBL,GAAY,GAC/B,GAAE,CAACK,EAAmBI,EAAUH,EAAcN,KAG7C,UAAC,IAAD,YACE,UAAC,KAAD,WACGI,EAAeQ,OAAS,IACvB,SAAC,KAAD,WACE,SAAC,KAAD,CAAcK,GAAE,iBAAhB,wBADY,QAIdf,GACAE,EAAec,KAAI,SAAAH,GAAQ,OACzB,SAAC,KAAD,WACE,UAAC,KAAD,CAAcE,GAAE,gBAAWF,GAA3B,cACIA,EADJ,aADaA,EADU,OAQJ,IAA1BX,EAAeQ,SACd,SAAC,KAAD,8EAMP,C,wKClDYO,EAAOC,EAAAA,EAAAA,GAAH,sGAOJC,EAAWD,EAAAA,EAAAA,GAAH,4DAKRE,GAAeF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,8SAcZI,EAAOJ,EAAAA,EAAAA,IAAH,iH,wEChBjB,UATa,WACX,OACE,UAAC,IAAD,YACE,SAAC,IAAD,KACA,SAAC,IAAD,MAGL,C,wGCTYK,EAAeL,EAAAA,EAAAA,IAAH,qJAQZM,EAAUN,EAAAA,EAAAA,IAAH,yW","sources":["components/StorePage/ShopsList/ShopsList.jsx","components/StorePage/ShopsList/ShopsList.styled.jsx","pages/Home/Home.jsx","pages/Store/Store.styled.jsx"],"sourcesContent":["import { useGetShopsQuery } from 'redux/productsSlice';\nimport { CategoryLink, Info, List, ListItem } from './ShopsList.styled';\nimport { useSelector } from 'react-redux';\n\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getShoppingCart } from 'redux/selectors';\nimport { SideBar } from 'pages/Store/Store.styled';\n\nexport const ShopsList = () => {\n  const { data: allShops, isFetching } = useGetShopsQuery();\n  const [availableShops, setAvailableShops] = useState([]);\n  const shoppingCart = useSelector(getShoppingCart);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (shoppingCart.length !== 0) {\n      const selectedShop = shoppingCart.find(\n        ({ category }) => category\n      ).category;\n\n      navigate(`store/${selectedShop}`, { replace: true });\n      setAvailableShops([selectedShop]);\n      return;\n    }\n\n    setAvailableShops(allShops || []);\n  }, [setAvailableShops, navigate, shoppingCart, allShops]);\n\n  return (\n    <SideBar>\n      <List>\n        {availableShops.length > 1 && (\n          <ListItem key=\"All\">\n            <CategoryLink to={`store/allShops`}>All shops</CategoryLink>\n          </ListItem>\n        )}\n        {!isFetching &&\n          availableShops.map(category => (\n            <ListItem key={category}>\n              <CategoryLink to={`store/${category}`}>\n                \"{category}\" shop\n              </CategoryLink>\n            </ListItem>\n          ))}\n      </List>\n      {availableShops.length === 1 && (\n        <Info>\n          You can buy products only from the one shop at the same time.\n        </Info>\n      )}\n    </SideBar>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px 0;\n  width: 100%;\n`;\n\nexport const CategoryLink = styled(NavLink)`\n  text-transform: uppercase;\n  text-decoration: none;\n  display: flex;\n  gap: 10px;\n  padding-bottom: 5px;\n  align-items: center;\n  border-bottom: 3px solid transparent;\n  &.active {\n    color: var(--brand-color);\n    border-bottom: 3px solid var(--brand-color);\n  }\n`;\n\nexport const Info = styled.div`\n  border-radius: 15px;\n  width: 100%;\n  padding: 15px;\n  background-color: #61dbfb44;\n`;\n","import { ShopsList } from 'components/StorePage/ShopsList/ShopsList';\nimport { StoreWrapper } from 'pages/Store/Store.styled';\nimport { ProductsList } from 'components/StorePage/ProductsList/ProductsList';\n\nconst Home = () => {\n  return (\n    <StoreWrapper>\n      <ShopsList />\n      <ProductsList />\n    </StoreWrapper>\n  );\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\n\nexport const StoreWrapper = styled.div`\n  display: flex;\n  @media screen and (max-width: 1280px) {\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\nexport const SideBar = styled.div`\n  flex-shrink: 0;\n  width: 260px;\n  padding: 20px;\n  border-right: 1px solid var(--primary-white-color);\n  border-bottom: 1px solid transparent;\n  @media screen and (max-width: 1280px) {\n    width: 100%;\n    max-width: none;\n    border-right: 1px solid transparent;\n    border-bottom: 1px solid var(--primary-white-color);\n  }\n`;\n"],"names":["ShopsList","useGetShopsQuery","allShops","data","isFetching","useState","availableShops","setAvailableShops","shoppingCart","useSelector","getShoppingCart","navigate","useNavigate","useEffect","length","selectedShop","find","category","replace","to","map","List","styled","ListItem","CategoryLink","NavLink","Info","StoreWrapper","SideBar"],"sourceRoot":""}